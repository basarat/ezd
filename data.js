var data = {"contents":[{"type":"html","html":"<div class=eze-markdown><h1 id=\"demo\">Demo</h1>\n<p>To create demos like this you write code like this:</p></div>"},{"type":"html","html":"<div class=eze-markdown><pre><code><div style=\"display: inline-block\"><span class=\"hljs-keyword\">import</span> { render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"../index\"</span>;\n<span class=\"hljs-keyword\">import</span> { colors } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../internal/styles'</span>;\n\n<span class=\"hljs-comment\">/** Render */</span>\nrender({\n  <span class=\"hljs-attr\">outputDir</span>: __dirname + <span class=\"hljs-string\">'/../../docs'</span>\n}, <span class=\"hljs-keyword\">async</span> eze =&gt; {\n\n  <span class=\"hljs-comment\">/** Write some markdown */</span>\n  <span class=\"hljs-keyword\">await</span> eze.md(<span class=\"hljs-string\">`\n  # Demo\n  To create demos like this you write code like this:\n  `</span>);\n\n  <span class=\"hljs-comment\">/** Show this file */</span>\n  <span class=\"hljs-keyword\">await</span> eze.code({ <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">'js'</span>, <span class=\"hljs-attr\">code</span>: <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'fs'</span>).readFileSync(__filename).toString() })\n\n  <span class=\"hljs-keyword\">await</span> eze.md(<span class=\"hljs-string\">`\n  # Why?\n  Because its code. \n\n  Reuse code variables + do fancy **code** stuff like a ðŸ‘” . \n\n  e.g. the color of this text is <span class=\"hljs-subst\">${colors.text}</span> ðŸŒ¹\n\n  And so many of the same advantages as [TypeStyle](http://typestyle.io/#/why).\n  `</span>);\n\n  <span class=\"hljs-comment\">/** Show some complete application demos */</span>\n  <span class=\"hljs-keyword\">await</span> eze.md(<span class=\"hljs-string\">`\n  # Embed applications\n  You can easily show complete applications:\n  `</span>);\n  <span class=\"hljs-keyword\">await</span> eze.app({\n    <span class=\"hljs-attr\">entryPointPath</span>: __dirname + <span class=\"hljs-string\">'/app-1.tsx'</span>,\n    <span class=\"hljs-attr\">sourceUrl</span>: <span class=\"hljs-string\">'https://github.com/basarat/eze/blob/master/src/docs/app-1.tsx'</span>,\n    <span class=\"hljs-attr\">height</span>: <span class=\"hljs-string\">'100px'</span>\n  });\n  <span class=\"hljs-keyword\">await</span> eze.md(<span class=\"hljs-string\">`\n  Embedded applications are automatically showcased in the best height\n   to prevent a vertical scrollbar on initial load.\n  `</span>);\n  <span class=\"hljs-keyword\">await</span> eze.app({\n    <span class=\"hljs-attr\">entryPointPath</span>: __dirname + <span class=\"hljs-string\">'/app-2.tsx'</span>,\n    <span class=\"hljs-attr\">sourceUrl</span>: <span class=\"hljs-string\">'https://github.com/basarat/eze/blob/master/src/docs/app-2.tsx'</span>\n  });\n})</div></code></pre></div>"},{"type":"html","html":"<div class=eze-markdown><h1 id=\"why-\">Why?</h1>\n<p>Because its code. </p>\n<p>Reuse code variables + do fancy <strong>code</strong> stuff like a ðŸ‘” . </p>\n<p>e.g. the color of this text is #555 ðŸŒ¹</p>\n<p>And so many of the same advantages as <a href=\"http://typestyle.io/#/why\" target=\"_blank\">TypeStyle</a>.</p></div>"},{"type":"html","html":"<div class=eze-markdown><h1 id=\"embed-applications\">Embed applications</h1>\n<p>You can easily show complete applications:</p></div>"},{"type":"app","htmlFileName":"app-1.html","sources":[{"mode":"js","code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { colors } from '../internal/styles';\n\nReactDOM.render(\n  <h2 style={{color: colors.text}}>Hello World</h2>,\n  document.getElementById('root')\n);"}],"sourceUrl":"https://github.com/basarat/eze/blob/master/src/docs/app-1.tsx","height":"100px"},{"type":"html","html":"<div class=eze-markdown><p>Embedded applications are automatically showcased in the best height\nto prevent a vertical scrollbar on initial load.</p></div>"},{"type":"app","htmlFileName":"app-2.html","sources":[{"mode":"js","code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { colors } from '../internal/styles';\n\nReactDOM.render(\n  <div style={{ color: colors.text }}>\n    <h3>Example with lots of content</h3>\n    <h2>...</h2>\n    <h2>...</h2>\n    <h2>...</h2>\n    <h2>...</h2>\n  </div>,\n  document.getElementById('root')\n);"}],"sourceUrl":"https://github.com/basarat/eze/blob/master/src/docs/app-2.tsx"}]}